<?xml version="1.0" encoding="UTF-8" ?>  
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd"> 
<mapper namespace="com.w.push.dao.PushContentDao">
    <!-- 缓存30分钟 -->
    <cache flushInterval="1800000" size="1024" readOnly="true" eviction="LRU"></cache>
    
    <resultMap id="BaseResultMap" type="com.w.push.entity.PushContent" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="title" property="title" jdbcType="VARCHAR" />
    <result column="content" property="content" jdbcType="VARCHAR" />
    <result column="type" property="type" jdbcType="TINYINT" />
    <result column="msgType" property="msgType" jdbcType="TINYINT" />
    <result column="url" property="url" jdbcType="VARCHAR" />
    <result column="status" property="status" jdbcType="TINYINT" />
    <result column="createTime" property="createTime" jdbcType="TIMESTAMP" />
  </resultMap>
  
    <select id="count" resultType="int">
        select count(*) c from pushContent;
    </select>
    <insert id="save">
      INSERT INTO pushContent(title,content,type,msgType,url,status,createTime) 
      VALUES(#{title},#{content},#{type},#{msgType},#{url},#{status},#{createTime})
    </insert>
    <select id="getEntity"  resultType="com.w.push.entity.PushContent">
      SELECT * FROM pushContent
    </select>
    <select id="getEntityById" parameterType="Long" resultType="com.w.push.entity.PushContent" useCache="true">
      SELECT * FROM pushContent WHERE id=#{id}
    </select>
    <delete id="delete" parameterType="String">
      DELETE FROM pushContent WHERE id=#{id}
    </delete>
    <update id="update" parameterType="com.w.push.entity.PushContent">
      UPDATE pushContent
      <set >
      <if test="title != null" >
        title = #{title},
      </if>
      <if test="content != null" >
        content = #{content},
      </if>
      <if test="type != null" >
        type = #{type},
      </if>
      <if test="msgType != null" >
        msgType = #{msgType},
      </if>
      <if test="url != null" >
        url = #{url},
      </if>
      <if test="status != null" >
        status = #{status},
      </if>
    </set>
      WHERE id=#{id}
    </update>
    <sql id="Base_Column_List" >
    id, title,content,type,msgType,url,status, createTime
  </sql>
  <sql id="Example_Order_Clause">
  	<trim prefix="order by" prefixOverrides="," >
  		<if test="orderMap.id != null">
  			,id ${orderMap.id}
  		</if>
  		<if test="orderMap.createTime != null" >
         and createTime ${orderMap.createTime}
      </if>
  	</trim>
  </sql>
  
  <sql id="Example_Where_Clause" >
    <trim prefix="where" prefixOverrides="and|or" >
      <if test="condition.id != null" >
         and id > #{condition.id}
      </if>
      <if test="condition.title != null" >
         and title = #{condition.title}
      </if>
      <if test="condition.titleLike != null" >
         and title like '%${condition.titleLike}%'
      </if>
      <if test="condition.status != null" >
         and status = #{condition.status}
      </if>
    </trim>
  </sql>
  <select id="countByCriteria" parameterType="com.w.core.model.Criteria" resultType="java.lang.Integer" >
    select count(*) from pushContent
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
    <select id="findListByCriteria" resultMap="BaseResultMap" parameterType="com.w.core.model.Criteria" >
    select
    <include refid="Base_Column_List" />
    from pushContent
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="_parameter != null" >
      <include refid="Example_Order_Clause" />
    </if>
    <include refid="common.Mysql_Pagination_Limit" />
  </select>
</mapper>